Flat profile:

Each sample counts as 0.01 seconds.
  %   cumulative   self              self     total           
 time   seconds   seconds    calls  ms/call  ms/call  name    
 17.98      0.30     0.30 134146103     0.00     0.00  sc_dt::sc_value_base::~sc_value_base()
 16.18      0.57     0.27   110390     0.00     0.01  witness(sc_dt::sc_bigint<250> const&, sc_dt::sc_bigint<250> const&)
 14.68      0.82     0.25 105964846     0.00     0.00  sc_dt::sc_signed::~sc_signed()
  7.19      0.94     0.12 28097500     0.00     0.00  sc_dt::sc_signed_bitref_r::initialize(sc_dt::sc_signed const*, int)
  6.29      1.04     0.11 28181257     0.00     0.00  sc_dt::sc_signed::~sc_signed()
  5.99      1.14     0.10 62985459     0.00     0.00  sc_dt::sc_bigint<250>::operator=(sc_dt::sc_signed const&)
  4.79      1.22     0.08   113390     0.00     0.00  rand_bitstr(char*, int)
  4.49      1.30     0.08 27707890     0.00     0.00  abs_val(sc_dt::sc_signed const&)
  3.89      1.36     0.07 35316130     0.00     0.00  sc_dt::operator==(sc_dt::sc_signed const&, int)
  3.00      1.41     0.05 27984110     0.00     0.00  flip(double)
  2.40      1.45     0.04 27830228     0.00     0.00  sc_dt::sc_bigint<250>::sc_bigint(sc_dt::sc_signed const&)
  2.40      1.49     0.04 27610993     0.00     0.00  sc_dt::sc_bigint<250>::operator=(sc_dt::sc_bigint<250> const&)
  1.80      1.52     0.03 55383036     0.00     0.00  sc_dt::operator<(sc_dt::sc_signed const&, int)
  1.80      1.55     0.03 28181257     0.00     0.00  sc_dt::sc_bigint<250>::~sc_bigint()
  1.80      1.58     0.03    74646     0.00     0.00  div_test(sc_dt::sc_bigint<250> const&)
  1.80      1.61     0.03     7000     0.00     0.00  sc_dt::sc_io_show_base(std::ostream&)
  1.20      1.63     0.02 28097500     0.00     0.00  sc_dt::sc_signed::check_index(int) const
  0.60      1.64     0.01 27597500     0.00     0.00  sc_dt::sc_signed::operator[](int)
  0.60      1.65     0.01   117390     0.00     0.00  sc_dt::sc_bigint<250>::operator=(int)
  0.60      1.66     0.01    74646     0.00     0.02  miller_rabin(sc_dt::sc_bigint<250> const&)
  0.30      1.67     0.01     7000     0.00     0.01  sc_dt::operator<<(std::ostream&, sc_dt::sc_signed const&)
  0.00      1.67     0.00 14383440     0.00     0.00  sc_dt::operator!=(sc_dt::sc_signed const&, int)
  0.00      1.67     0.00  7708132     0.00     0.00  sc_dt::operator%(sc_dt::sc_signed const&, int)
  0.00      1.67     0.00   500000     0.00     0.00  sc_dt::sc_signed::operator[](int) const
  0.00      1.67     0.00   222780     0.00     0.00  sc_dt::operator-(sc_dt::sc_signed const&, int)
  0.00      1.67     0.00   183036     0.00     0.00  sc_dt::operator+(sc_dt::sc_signed const&, int)
  0.00      1.67     0.00   117390     0.00     0.00  sc_dt::sc_signed::operator=(int)
  0.00      1.67     0.00   115390     0.00     0.00  sc_dt::sc_bigint<250>::sc_bigint(int)
  0.00      1.67     0.00   114390     0.00     0.00  sc_dt::sc_bigint<250>::sc_bigint(char const*)
  0.00      1.67     0.00   114390     0.00     0.00  sc_dt::sc_bigint<250>::operator=(char const*)
  0.00      1.67     0.00   113390     0.00     0.00  sc_dt::sc_bigint<250>::sc_bigint()
  0.00      1.67     0.00   112390     0.00     0.00  sc_dt::sc_signed::length() const
  0.00      1.67     0.00    82646     0.00     0.00  sc_dt::operator>(sc_dt::sc_signed const&, int)
  0.00      1.67     0.00    74646     0.00     0.00  sc_dt::operator<=(sc_dt::sc_signed const&, int)
  0.00      1.67     0.00    21000     0.00     0.00  std::operator&(std::_Ios_Fmtflags, std::_Ios_Fmtflags)
  0.00      1.67     0.00    14000     0.00     0.00  std::ios_base::flags() const
  0.00      1.67     0.00     7859     0.00     0.00  sc_dt::sc_bigint<250>::sc_bigint(sc_dt::sc_bigint<250> const&)
  0.00      1.67     0.00     7000     0.00     0.00  sc_dt::sc_io_base(std::ostream&, sc_dt::sc_numrep)
  0.00      1.67     0.00     7000     0.00     0.00  sc_dt::sc_signed::print(std::ostream&) const
  0.00      1.67     0.00     3000     0.00     0.00  ret_pos(sc_dt::sc_bigint<250> const&, sc_dt::sc_bigint<250> const&)
  0.00      1.67     0.00     2000     0.00     0.81  find_prime(sc_dt::sc_bigint<250> const&)
  0.00      1.67     0.00     2000     0.00     0.00  modular_exp(sc_dt::sc_bigint<250> const&, sc_dt::sc_bigint<250> const&, sc_dt::sc_bigint<250> const&)
  0.00      1.67     0.00     1959     0.00     0.00  gcd(sc_dt::sc_bigint<250> const&, sc_dt::sc_bigint<250> const&)
  0.00      1.67     0.00     1000     0.00     0.00  max_bitstr(char*, int)
  0.00      1.67     0.00     1000     0.00     0.00  find_rel_prime(sc_dt::sc_bigint<250> const&)
  0.00      1.67     0.00     1000     0.00     1.67  rsa(int)
  0.00      1.67     0.00     1000     0.00     0.00  cipher(sc_dt::sc_bigint<250> const&, sc_dt::sc_bigint<250> const&, sc_dt::sc_bigint<250> const&)
  0.00      1.67     0.00     1000     0.00     0.00  euclid(sc_dt::sc_bigint<250> const&, sc_dt::sc_bigint<250> const&, sc_dt::sc_bigint<250>&, sc_dt::sc_bigint<250>&, sc_dt::sc_bigint<250>&)
  0.00      1.67     0.00     1000     0.00     0.00  inverse(sc_dt::sc_bigint<250> const&, sc_dt::sc_bigint<250> const&)
  0.00      1.67     0.00     1000     0.00     0.00  decipher(sc_dt::sc_bigint<250> const&, sc_dt::sc_bigint<250> const&, sc_dt::sc_bigint<250> const&)
  0.00      1.67     0.00     1000     0.00     0.00  randomize(int)
  0.00      1.67     0.00      959     0.00     0.00  sc_dt::sc_signed::operator+=(int)
  0.00      1.67     0.00        1     0.00     0.00  global constructors keyed to gcd(sc_dt::sc_bigint<250> const&, sc_dt::sc_bigint<250> const&)
  0.00      1.67     0.00        1     0.00     0.00  __static_initialization_and_destruction_0(int, int)

 %         the percentage of the total running time of the
time       program used by this function.

cumulative a running sum of the number of seconds accounted
 seconds   for by this function and those listed above it.

 self      the number of seconds accounted for by this
seconds    function alone.  This is the major sort for this
           listing.

calls      the number of times this function was invoked, if
           this function is profiled, else blank.
 
 self      the average number of milliseconds spent in this
ms/call    function per call, if this function is profiled,
	   else blank.

 total     the average number of milliseconds spent in this
ms/call    function and its descendents per call, if this 
	   function is profiled, else blank.

name       the name of the function.  This is the minor sort
           for this listing. The index shows the location of
	   the function in the gprof listing. If the index is
	   in parenthesis it shows where it would appear in
	   the gprof listing if it were to be printed.

Copyright (C) 2012 Free Software Foundation, Inc.

Copying and distribution of this file, with or without modification,
are permitted in any medium without royalty provided the copyright
notice and this notice are preserved.

		     Call graph (explanation follows)


granularity: each sample hit covers 2 byte(s) for 0.60% of 1.67 seconds

index % time    self  children    called     name
                                                 <spontaneous>
[1]    100.0    0.00    1.67                 sc_main [1]
                0.00    1.67    1000/1000        rsa(int) [2]
-----------------------------------------------
                0.00    1.67    1000/1000        sc_main [1]
[2]    100.0    0.00    1.67    1000         rsa(int) [2]
                0.00    1.62    2000/2000        find_prime(sc_dt::sc_bigint<250> const&) [3]
                0.01    0.03    7000/7000        sc_dt::operator<<(std::ostream&, sc_dt::sc_signed const&) [20]
                0.00    0.00    1000/1000        cipher(sc_dt::sc_bigint<250> const&, sc_dt::sc_bigint<250> const&, sc_dt::sc_bigint<250> const&) [28]
                0.00    0.00    1000/1000        decipher(sc_dt::sc_bigint<250> const&, sc_dt::sc_bigint<250> const&, sc_dt::sc_bigint<250> const&) [29]
                0.00    0.00    1000/113390      rand_bitstr(char*, int) [12]
                0.00    0.00    1000/1000        inverse(sc_dt::sc_bigint<250> const&, sc_dt::sc_bigint<250> const&) [31]
                0.00    0.00    1000/1000        find_rel_prime(sc_dt::sc_bigint<250> const&) [33]
                0.00    0.00   10000/28181257     sc_dt::sc_bigint<250>::~sc_bigint() [9]
                0.00    0.00    4000/105964846     sc_dt::sc_signed::~sc_signed() [6]
                0.00    0.00    2000/27830228     sc_dt::sc_bigint<250>::sc_bigint(sc_dt::sc_signed const&) [15]
                0.00    0.00    1000/27610993     sc_dt::sc_bigint<250>::operator=(sc_dt::sc_bigint<250> const&) [19]
                0.00    0.00    8000/82646       sc_dt::operator>(sc_dt::sc_signed const&, int) [50]
                0.00    0.00    2000/114390      sc_dt::sc_bigint<250>::sc_bigint(char const*) [46]
                0.00    0.00    2000/222780      sc_dt::operator-(sc_dt::sc_signed const&, int) [43]
                0.00    0.00    1000/1000        max_bitstr(char*, int) [55]
                0.00    0.00    1000/1000        randomize(int) [56]
-----------------------------------------------
                0.00    1.62    2000/2000        rsa(int) [2]
[3]     97.2    0.00    1.62    2000         find_prime(sc_dt::sc_bigint<250> const&) [3]
                0.01    1.61   74646/74646       miller_rabin(sc_dt::sc_bigint<250> const&) [4]
                0.00    0.00    2000/113390      rand_bitstr(char*, int) [12]
                0.00    0.00  147292/105964846     sc_dt::sc_signed::~sc_signed() [6]
                0.00    0.00    2000/115390      sc_dt::sc_bigint<250>::sc_bigint(int) [26]
                0.00    0.00   72646/62985459     sc_dt::sc_bigint<250>::operator=(sc_dt::sc_signed const&) [14]
                0.00    0.00    2000/28181257     sc_dt::sc_bigint<250>::~sc_bigint() [9]
                0.00    0.00    2000/35316130     sc_dt::operator==(sc_dt::sc_signed const&, int) [17]
                0.00    0.00   74646/82646       sc_dt::operator>(sc_dt::sc_signed const&, int) [50]
                0.00    0.00   72646/183036      sc_dt::operator+(sc_dt::sc_signed const&, int) [44]
                0.00    0.00    2000/114390      sc_dt::sc_bigint<250>::sc_bigint(char const*) [46]
                0.00    0.00    2000/7708132     sc_dt::operator%(sc_dt::sc_signed const&, int) [42]
-----------------------------------------------
                0.01    1.61   74646/74646       find_prime(sc_dt::sc_bigint<250> const&) [3]
[4]     97.0    0.01    1.61   74646         miller_rabin(sc_dt::sc_bigint<250> const&) [4]
                0.27    1.13  110390/110390      witness(sc_dt::sc_bigint<250> const&, sc_dt::sc_bigint<250> const&) [5]
                0.08    0.05  110390/113390      rand_bitstr(char*, int) [12]
                0.03    0.05   74646/74646       div_test(sc_dt::sc_bigint<250> const&) [16]
                0.00    0.00  331170/105964846     sc_dt::sc_signed::~sc_signed() [6]
                0.00    0.00  110390/28181257     sc_dt::sc_bigint<250>::~sc_bigint() [9]
                0.00    0.00  110390/62985459     sc_dt::sc_bigint<250>::operator=(sc_dt::sc_signed const&) [14]
                0.00    0.00  110390/114390      sc_dt::sc_bigint<250>::sc_bigint(char const*) [46]
                0.00    0.00  110390/222780      sc_dt::operator-(sc_dt::sc_signed const&, int) [43]
                0.00    0.00  110390/183036      sc_dt::operator+(sc_dt::sc_signed const&, int) [44]
                0.00    0.00   74646/74646       sc_dt::operator<=(sc_dt::sc_signed const&, int) [51]
-----------------------------------------------
                0.27    1.13  110390/110390      miller_rabin(sc_dt::sc_bigint<250> const&) [4]
[5]     83.9    0.27    1.13  110390         witness(sc_dt::sc_bigint<250> const&, sc_dt::sc_bigint<250> const&) [5]
                0.16    0.15 68796170/105964846     sc_dt::sc_signed::~sc_signed() [6]
                0.08    0.23 27707890/27707890     abs_val(sc_dt::sc_signed const&) [8]
                0.03    0.17 28039060/28181257     sc_dt::sc_bigint<250>::~sc_bigint() [9]
                0.01    0.14 27597500/27597500     sc_dt::sc_signed::operator[](int) [11]
                0.05    0.00 34342890/62985459     sc_dt::sc_bigint<250>::operator=(sc_dt::sc_signed const&) [14]
                0.05    0.00 27597500/35316130     sc_dt::operator==(sc_dt::sc_signed const&, int) [17]
                0.04    0.00 27597500/27610993     sc_dt::sc_bigint<250>::operator=(sc_dt::sc_bigint<250> const&) [19]
                0.01    0.00 27597500/55383036     sc_dt::operator<(sc_dt::sc_signed const&, int) [21]
                0.00    0.01  110390/115390      sc_dt::sc_bigint<250>::sc_bigint(int) [26]
                0.00    0.00  110390/27830228     sc_dt::sc_bigint<250>::sc_bigint(sc_dt::sc_signed const&) [15]
                0.00    0.00 14378806/14383440     sc_dt::operator!=(sc_dt::sc_signed const&, int) [41]
                0.00    0.00  110390/222780      sc_dt::operator-(sc_dt::sc_signed const&, int) [43]
                0.00    0.00  110390/113390      sc_dt::sc_bigint<250>::sc_bigint() [48]
                0.00    0.00  110390/112390      sc_dt::sc_signed::length() const [49]
-----------------------------------------------
                0.00    0.00     734/105964846     ret_pos(sc_dt::sc_bigint<250> const&, sc_dt::sc_bigint<250> const&) [36]
                0.00    0.00    4000/105964846     rsa(int) [2]
                0.00    0.00    5580/105964846     gcd(sc_dt::sc_bigint<250> const&, sc_dt::sc_bigint<250> const&) [34]
                0.00    0.00   14536/105964846     euclid(sc_dt::sc_bigint<250> const&, sc_dt::sc_bigint<250> const&, sc_dt::sc_bigint<250>&, sc_dt::sc_bigint<250>&, sc_dt::sc_bigint<250>&) [32]
                0.00    0.00  147292/105964846     find_prime(sc_dt::sc_bigint<250> const&) [3]
                0.00    0.00  331170/105964846     miller_rabin(sc_dt::sc_bigint<250> const&) [4]
                0.00    0.00 1251342/105964846     modular_exp(sc_dt::sc_bigint<250> const&, sc_dt::sc_bigint<250> const&, sc_dt::sc_bigint<250> const&) [27]
                0.02    0.02 7706132/105964846     div_test(sc_dt::sc_bigint<250> const&) [16]
                0.06    0.06 27707890/105964846     abs_val(sc_dt::sc_signed const&) [8]
                0.16    0.15 68796170/105964846     witness(sc_dt::sc_bigint<250> const&, sc_dt::sc_bigint<250> const&) [5]
[6]     28.9    0.25    0.24 105964846         sc_dt::sc_signed::~sc_signed() [6]
                0.24    0.00 105964846/134146103     sc_dt::sc_value_base::~sc_value_base() [7]
-----------------------------------------------
                0.06    0.00 28181257/134146103     sc_dt::sc_signed::~sc_signed() [10]
                0.24    0.00 105964846/134146103     sc_dt::sc_signed::~sc_signed() [6]
[7]     18.0    0.30    0.00 134146103         sc_dt::sc_value_base::~sc_value_base() [7]
-----------------------------------------------
                0.08    0.23 27707890/27707890     witness(sc_dt::sc_bigint<250> const&, sc_dt::sc_bigint<250> const&) [5]
[8]     18.0    0.08    0.23 27707890         abs_val(sc_dt::sc_signed const&) [8]
                0.06    0.06 27707890/105964846     sc_dt::sc_signed::~sc_signed() [6]
                0.04    0.04 27707890/27830228     sc_dt::sc_bigint<250>::sc_bigint(sc_dt::sc_signed const&) [15]
                0.02    0.00 27707890/55383036     sc_dt::operator<(sc_dt::sc_signed const&, int) [21]
-----------------------------------------------
                0.00    0.00    1959/28181257     find_rel_prime(sc_dt::sc_bigint<250> const&) [33]
                0.00    0.00    2000/28181257     modular_exp(sc_dt::sc_bigint<250> const&, sc_dt::sc_bigint<250> const&, sc_dt::sc_bigint<250> const&) [27]
                0.00    0.00    2000/28181257     find_prime(sc_dt::sc_bigint<250> const&) [3]
                0.00    0.00    3000/28181257     inverse(sc_dt::sc_bigint<250> const&, sc_dt::sc_bigint<250> const&) [31]
                0.00    0.00    5580/28181257     gcd(sc_dt::sc_bigint<250> const&, sc_dt::sc_bigint<250> const&) [34]
                0.00    0.00    7268/28181257     euclid(sc_dt::sc_bigint<250> const&, sc_dt::sc_bigint<250> const&, sc_dt::sc_bigint<250>&, sc_dt::sc_bigint<250>&, sc_dt::sc_bigint<250>&) [32]
                0.00    0.00   10000/28181257     rsa(int) [2]
                0.00    0.00  110390/28181257     miller_rabin(sc_dt::sc_bigint<250> const&) [4]
                0.03    0.17 28039060/28181257     witness(sc_dt::sc_bigint<250> const&, sc_dt::sc_bigint<250> const&) [5]
[9]     11.9    0.03    0.17 28181257         sc_dt::sc_bigint<250>::~sc_bigint() [9]
                0.11    0.06 28181257/28181257     sc_dt::sc_signed::~sc_signed() [10]
-----------------------------------------------
                0.11    0.06 28181257/28181257     sc_dt::sc_bigint<250>::~sc_bigint() [9]
[10]    10.1    0.11    0.06 28181257         sc_dt::sc_signed::~sc_signed() [10]
                0.06    0.00 28181257/134146103     sc_dt::sc_value_base::~sc_value_base() [7]
-----------------------------------------------
                0.01    0.14 27597500/27597500     witness(sc_dt::sc_bigint<250> const&, sc_dt::sc_bigint<250> const&) [5]
[11]     8.9    0.01    0.14 27597500         sc_dt::sc_signed::operator[](int) [11]
                0.12    0.00 27597500/28097500     sc_dt::sc_signed_bitref_r::initialize(sc_dt::sc_signed const*, int) [13]
                0.02    0.00 27597500/28097500     sc_dt::sc_signed::check_index(int) const [24]
-----------------------------------------------
                0.00    0.00    1000/113390      rsa(int) [2]
                0.00    0.00    2000/113390      find_prime(sc_dt::sc_bigint<250> const&) [3]
                0.08    0.05  110390/113390      miller_rabin(sc_dt::sc_bigint<250> const&) [4]
[12]     7.8    0.08    0.05  113390         rand_bitstr(char*, int) [12]
                0.05    0.00 27984110/27984110     flip(double) [18]
-----------------------------------------------
                0.00    0.00  500000/28097500     sc_dt::sc_signed::operator[](int) const [30]
                0.12    0.00 27597500/28097500     sc_dt::sc_signed::operator[](int) [11]
[13]     7.2    0.12    0.00 28097500         sc_dt::sc_signed_bitref_r::initialize(sc_dt::sc_signed const*, int) [13]
-----------------------------------------------
                0.00    0.00    3634/62985459     euclid(sc_dt::sc_bigint<250> const&, sc_dt::sc_bigint<250> const&, sc_dt::sc_bigint<250>&, sc_dt::sc_bigint<250>&, sc_dt::sc_bigint<250>&) [32]
                0.00    0.00   72646/62985459     find_prime(sc_dt::sc_bigint<250> const&) [3]
                0.00    0.00  110390/62985459     miller_rabin(sc_dt::sc_bigint<250> const&) [4]
                0.00    0.00  625671/62985459     modular_exp(sc_dt::sc_bigint<250> const&, sc_dt::sc_bigint<250> const&, sc_dt::sc_bigint<250> const&) [27]
                0.04    0.00 27830228/62985459     sc_dt::sc_bigint<250>::sc_bigint(sc_dt::sc_signed const&) [15]
                0.05    0.00 34342890/62985459     witness(sc_dt::sc_bigint<250> const&, sc_dt::sc_bigint<250> const&) [5]
[14]     6.0    0.10    0.00 62985459         sc_dt::sc_bigint<250>::operator=(sc_dt::sc_signed const&) [14]
-----------------------------------------------
                0.00    0.00     734/27830228     ret_pos(sc_dt::sc_bigint<250> const&, sc_dt::sc_bigint<250> const&) [36]
                0.00    0.00    2000/27830228     rsa(int) [2]
                0.00    0.00    3634/27830228     euclid(sc_dt::sc_bigint<250> const&, sc_dt::sc_bigint<250> const&, sc_dt::sc_bigint<250>&, sc_dt::sc_bigint<250>&, sc_dt::sc_bigint<250>&) [32]
                0.00    0.00    5580/27830228     gcd(sc_dt::sc_bigint<250> const&, sc_dt::sc_bigint<250> const&) [34]
                0.00    0.00  110390/27830228     witness(sc_dt::sc_bigint<250> const&, sc_dt::sc_bigint<250> const&) [5]
                0.04    0.04 27707890/27830228     abs_val(sc_dt::sc_signed const&) [8]
[15]     5.1    0.04    0.04 27830228         sc_dt::sc_bigint<250>::sc_bigint(sc_dt::sc_signed const&) [15]
                0.04    0.00 27830228/62985459     sc_dt::sc_bigint<250>::operator=(sc_dt::sc_signed const&) [14]
-----------------------------------------------
                0.03    0.05   74646/74646       miller_rabin(sc_dt::sc_bigint<250> const&) [4]
[16]     4.8    0.03    0.05   74646         div_test(sc_dt::sc_bigint<250> const&) [16]
                0.02    0.02 7706132/105964846     sc_dt::sc_signed::~sc_signed() [6]
                0.01    0.00 7706132/35316130     sc_dt::operator==(sc_dt::sc_signed const&, int) [17]
                0.00    0.00   74646/55383036     sc_dt::operator<(sc_dt::sc_signed const&, int) [21]
                0.00    0.00 7706132/7708132     sc_dt::operator%(sc_dt::sc_signed const&, int) [42]
-----------------------------------------------
                0.00    0.00    1000/35316130     inverse(sc_dt::sc_bigint<250> const&, sc_dt::sc_bigint<250> const&) [31]
                0.00    0.00    1959/35316130     find_rel_prime(sc_dt::sc_bigint<250> const&) [33]
                0.00    0.00    2000/35316130     find_prime(sc_dt::sc_bigint<250> const&) [3]
                0.00    0.00    7539/35316130     gcd(sc_dt::sc_bigint<250> const&, sc_dt::sc_bigint<250> const&) [34]
                0.01    0.00 7706132/35316130     div_test(sc_dt::sc_bigint<250> const&) [16]
                0.05    0.00 27597500/35316130     witness(sc_dt::sc_bigint<250> const&, sc_dt::sc_bigint<250> const&) [5]
[17]     3.9    0.07    0.00 35316130         sc_dt::operator==(sc_dt::sc_signed const&, int) [17]
-----------------------------------------------
                0.05    0.00 27984110/27984110     rand_bitstr(char*, int) [12]
[18]     3.0    0.05    0.00 27984110         flip(double) [18]
-----------------------------------------------
                0.00    0.00    1000/27610993     rsa(int) [2]
                0.00    0.00    4634/27610993     euclid(sc_dt::sc_bigint<250> const&, sc_dt::sc_bigint<250> const&, sc_dt::sc_bigint<250>&, sc_dt::sc_bigint<250>&, sc_dt::sc_bigint<250>&) [32]
                0.00    0.00    7859/27610993     sc_dt::sc_bigint<250>::sc_bigint(sc_dt::sc_bigint<250> const&) [35]
                0.04    0.00 27597500/27610993     witness(sc_dt::sc_bigint<250> const&, sc_dt::sc_bigint<250> const&) [5]
[19]     2.4    0.04    0.00 27610993         sc_dt::sc_bigint<250>::operator=(sc_dt::sc_bigint<250> const&) [19]
-----------------------------------------------
                0.01    0.03    7000/7000        rsa(int) [2]
[20]     2.1    0.01    0.03    7000         sc_dt::operator<<(std::ostream&, sc_dt::sc_signed const&) [20]
                0.00    0.03    7000/7000        sc_dt::sc_signed::print(std::ostream&) const [23]
-----------------------------------------------
                0.00    0.00    3000/55383036     ret_pos(sc_dt::sc_bigint<250> const&, sc_dt::sc_bigint<250> const&) [36]
                0.00    0.00   74646/55383036     div_test(sc_dt::sc_bigint<250> const&) [16]
                0.01    0.00 27597500/55383036     witness(sc_dt::sc_bigint<250> const&, sc_dt::sc_bigint<250> const&) [5]
                0.02    0.00 27707890/55383036     abs_val(sc_dt::sc_signed const&) [8]
[21]     1.8    0.03    0.00 55383036         sc_dt::operator<(sc_dt::sc_signed const&, int) [21]
-----------------------------------------------
                0.03    0.00    7000/7000        sc_dt::sc_signed::print(std::ostream&) const [23]
[22]     1.8    0.03    0.00    7000         sc_dt::sc_io_show_base(std::ostream&) [22]
                0.00    0.00    7000/14000       std::ios_base::flags() const [53]
                0.00    0.00    7000/21000       std::operator&(std::_Ios_Fmtflags, std::_Ios_Fmtflags) [52]
-----------------------------------------------
                0.00    0.03    7000/7000        sc_dt::operator<<(std::ostream&, sc_dt::sc_signed const&) [20]
[23]     1.8    0.00    0.03    7000         sc_dt::sc_signed::print(std::ostream&) const [23]
                0.03    0.00    7000/7000        sc_dt::sc_io_show_base(std::ostream&) [22]
                0.00    0.00    7000/7000        sc_dt::sc_io_base(std::ostream&, sc_dt::sc_numrep) [54]
-----------------------------------------------
                0.00    0.00  500000/28097500     sc_dt::sc_signed::operator[](int) const [30]
                0.02    0.00 27597500/28097500     sc_dt::sc_signed::operator[](int) [11]
[24]     1.2    0.02    0.00 28097500         sc_dt::sc_signed::check_index(int) const [24]
-----------------------------------------------
                0.00    0.00    2000/117390      euclid(sc_dt::sc_bigint<250> const&, sc_dt::sc_bigint<250> const&, sc_dt::sc_bigint<250>&, sc_dt::sc_bigint<250>&, sc_dt::sc_bigint<250>&) [32]
                0.01    0.00  115390/117390      sc_dt::sc_bigint<250>::sc_bigint(int) [26]
[25]     0.6    0.01    0.00  117390         sc_dt::sc_bigint<250>::operator=(int) [25]
                0.00    0.00  117390/117390      sc_dt::sc_signed::operator=(int) [45]
-----------------------------------------------
                0.00    0.00    1000/115390      find_rel_prime(sc_dt::sc_bigint<250> const&) [33]
                0.00    0.00    2000/115390      modular_exp(sc_dt::sc_bigint<250> const&, sc_dt::sc_bigint<250> const&, sc_dt::sc_bigint<250> const&) [27]
                0.00    0.00    2000/115390      find_prime(sc_dt::sc_bigint<250> const&) [3]
                0.00    0.01  110390/115390      witness(sc_dt::sc_bigint<250> const&, sc_dt::sc_bigint<250> const&) [5]
[26]     0.6    0.00    0.01  115390         sc_dt::sc_bigint<250>::sc_bigint(int) [26]
                0.01    0.00  115390/117390      sc_dt::sc_bigint<250>::operator=(int) [25]
-----------------------------------------------
                0.00    0.00    1000/2000        cipher(sc_dt::sc_bigint<250> const&, sc_dt::sc_bigint<250> const&, sc_dt::sc_bigint<250> const&) [28]
                0.00    0.00    1000/2000        decipher(sc_dt::sc_bigint<250> const&, sc_dt::sc_bigint<250> const&, sc_dt::sc_bigint<250> const&) [29]
[27]     0.6    0.00    0.01    2000         modular_exp(sc_dt::sc_bigint<250> const&, sc_dt::sc_bigint<250> const&, sc_dt::sc_bigint<250> const&) [27]
                0.00    0.00 1251342/105964846     sc_dt::sc_signed::~sc_signed() [6]
                0.00    0.00  500000/500000      sc_dt::sc_signed::operator[](int) const [30]
                0.00    0.00  625671/62985459     sc_dt::sc_bigint<250>::operator=(sc_dt::sc_signed const&) [14]
                0.00    0.00    2000/115390      sc_dt::sc_bigint<250>::sc_bigint(int) [26]
                0.00    0.00    2000/28181257     sc_dt::sc_bigint<250>::~sc_bigint() [9]
                0.00    0.00    2000/3000        ret_pos(sc_dt::sc_bigint<250> const&, sc_dt::sc_bigint<250> const&) [36]
                0.00    0.00    2000/112390      sc_dt::sc_signed::length() const [49]
-----------------------------------------------
                0.00    0.00    1000/1000        rsa(int) [2]
[28]     0.3    0.00    0.00    1000         cipher(sc_dt::sc_bigint<250> const&, sc_dt::sc_bigint<250> const&, sc_dt::sc_bigint<250> const&) [28]
                0.00    0.00    1000/2000        modular_exp(sc_dt::sc_bigint<250> const&, sc_dt::sc_bigint<250> const&, sc_dt::sc_bigint<250> const&) [27]
-----------------------------------------------
                0.00    0.00    1000/1000        rsa(int) [2]
[29]     0.3    0.00    0.00    1000         decipher(sc_dt::sc_bigint<250> const&, sc_dt::sc_bigint<250> const&, sc_dt::sc_bigint<250> const&) [29]
                0.00    0.00    1000/2000        modular_exp(sc_dt::sc_bigint<250> const&, sc_dt::sc_bigint<250> const&, sc_dt::sc_bigint<250> const&) [27]
-----------------------------------------------
                0.00    0.00  500000/500000      modular_exp(sc_dt::sc_bigint<250> const&, sc_dt::sc_bigint<250> const&, sc_dt::sc_bigint<250> const&) [27]
[30]     0.1    0.00    0.00  500000         sc_dt::sc_signed::operator[](int) const [30]
                0.00    0.00  500000/28097500     sc_dt::sc_signed_bitref_r::initialize(sc_dt::sc_signed const*, int) [13]
                0.00    0.00  500000/28097500     sc_dt::sc_signed::check_index(int) const [24]
-----------------------------------------------
                0.00    0.00    1000/1000        rsa(int) [2]
[31]     0.0    0.00    0.00    1000         inverse(sc_dt::sc_bigint<250> const&, sc_dt::sc_bigint<250> const&) [31]
                0.00    0.00    1000/1000        euclid(sc_dt::sc_bigint<250> const&, sc_dt::sc_bigint<250> const&, sc_dt::sc_bigint<250>&, sc_dt::sc_bigint<250>&, sc_dt::sc_bigint<250>&) [32]
                0.00    0.00    3000/28181257     sc_dt::sc_bigint<250>::~sc_bigint() [9]
                0.00    0.00    1000/3000        ret_pos(sc_dt::sc_bigint<250> const&, sc_dt::sc_bigint<250> const&) [36]
                0.00    0.00    1000/35316130     sc_dt::operator==(sc_dt::sc_signed const&, int) [17]
                0.00    0.00    3000/113390      sc_dt::sc_bigint<250>::sc_bigint() [48]
-----------------------------------------------
                                3634             euclid(sc_dt::sc_bigint<250> const&, sc_dt::sc_bigint<250> const&, sc_dt::sc_bigint<250>&, sc_dt::sc_bigint<250>&, sc_dt::sc_bigint<250>&) [32]
                0.00    0.00    1000/1000        inverse(sc_dt::sc_bigint<250> const&, sc_dt::sc_bigint<250> const&) [31]
[32]     0.0    0.00    0.00    1000+3634    euclid(sc_dt::sc_bigint<250> const&, sc_dt::sc_bigint<250> const&, sc_dt::sc_bigint<250>&, sc_dt::sc_bigint<250>&, sc_dt::sc_bigint<250>&) [32]
                0.00    0.00    2000/117390      sc_dt::sc_bigint<250>::operator=(int) [25]
                0.00    0.00   14536/105964846     sc_dt::sc_signed::~sc_signed() [6]
                0.00    0.00    7268/28181257     sc_dt::sc_bigint<250>::~sc_bigint() [9]
                0.00    0.00    3634/27830228     sc_dt::sc_bigint<250>::sc_bigint(sc_dt::sc_signed const&) [15]
                0.00    0.00    4634/27610993     sc_dt::sc_bigint<250>::operator=(sc_dt::sc_bigint<250> const&) [19]
                0.00    0.00    3634/62985459     sc_dt::sc_bigint<250>::operator=(sc_dt::sc_signed const&) [14]
                0.00    0.00    3634/7859        sc_dt::sc_bigint<250>::sc_bigint(sc_dt::sc_bigint<250> const&) [35]
                0.00    0.00    4634/14383440     sc_dt::operator!=(sc_dt::sc_signed const&, int) [41]
                                3634             euclid(sc_dt::sc_bigint<250> const&, sc_dt::sc_bigint<250> const&, sc_dt::sc_bigint<250>&, sc_dt::sc_bigint<250>&, sc_dt::sc_bigint<250>&) [32]
-----------------------------------------------
                0.00    0.00    1000/1000        rsa(int) [2]
[33]     0.0    0.00    0.00    1000         find_rel_prime(sc_dt::sc_bigint<250> const&) [33]
                0.00    0.00    1959/1959        gcd(sc_dt::sc_bigint<250> const&, sc_dt::sc_bigint<250> const&) [34]
                0.00    0.00    1000/115390      sc_dt::sc_bigint<250>::sc_bigint(int) [26]
                0.00    0.00    1959/28181257     sc_dt::sc_bigint<250>::~sc_bigint() [9]
                0.00    0.00    1959/35316130     sc_dt::operator==(sc_dt::sc_signed const&, int) [17]
                0.00    0.00     959/959         sc_dt::sc_signed::operator+=(int) [57]
-----------------------------------------------
                                5580             gcd(sc_dt::sc_bigint<250> const&, sc_dt::sc_bigint<250> const&) [34]
                0.00    0.00    1959/1959        find_rel_prime(sc_dt::sc_bigint<250> const&) [33]
[34]     0.0    0.00    0.00    1959+5580    gcd(sc_dt::sc_bigint<250> const&, sc_dt::sc_bigint<250> const&) [34]
                0.00    0.00    5580/28181257     sc_dt::sc_bigint<250>::~sc_bigint() [9]
                0.00    0.00    5580/105964846     sc_dt::sc_signed::~sc_signed() [6]
                0.00    0.00    5580/27830228     sc_dt::sc_bigint<250>::sc_bigint(sc_dt::sc_signed const&) [15]
                0.00    0.00    7539/35316130     sc_dt::operator==(sc_dt::sc_signed const&, int) [17]
                0.00    0.00    1959/7859        sc_dt::sc_bigint<250>::sc_bigint(sc_dt::sc_bigint<250> const&) [35]
                                5580             gcd(sc_dt::sc_bigint<250> const&, sc_dt::sc_bigint<250> const&) [34]
-----------------------------------------------
                0.00    0.00    1959/7859        gcd(sc_dt::sc_bigint<250> const&, sc_dt::sc_bigint<250> const&) [34]
                0.00    0.00    2266/7859        ret_pos(sc_dt::sc_bigint<250> const&, sc_dt::sc_bigint<250> const&) [36]
                0.00    0.00    3634/7859        euclid(sc_dt::sc_bigint<250> const&, sc_dt::sc_bigint<250> const&, sc_dt::sc_bigint<250>&, sc_dt::sc_bigint<250>&, sc_dt::sc_bigint<250>&) [32]
[35]     0.0    0.00    0.00    7859         sc_dt::sc_bigint<250>::sc_bigint(sc_dt::sc_bigint<250> const&) [35]
                0.00    0.00    7859/27610993     sc_dt::sc_bigint<250>::operator=(sc_dt::sc_bigint<250> const&) [19]
-----------------------------------------------
                0.00    0.00    1000/3000        inverse(sc_dt::sc_bigint<250> const&, sc_dt::sc_bigint<250> const&) [31]
                0.00    0.00    2000/3000        modular_exp(sc_dt::sc_bigint<250> const&, sc_dt::sc_bigint<250> const&, sc_dt::sc_bigint<250> const&) [27]
[36]     0.0    0.00    0.00    3000         ret_pos(sc_dt::sc_bigint<250> const&, sc_dt::sc_bigint<250> const&) [36]
                0.00    0.00     734/105964846     sc_dt::sc_signed::~sc_signed() [6]
                0.00    0.00    2266/7859        sc_dt::sc_bigint<250>::sc_bigint(sc_dt::sc_bigint<250> const&) [35]
                0.00    0.00     734/27830228     sc_dt::sc_bigint<250>::sc_bigint(sc_dt::sc_signed const&) [15]
                0.00    0.00    3000/55383036     sc_dt::operator<(sc_dt::sc_signed const&, int) [21]
-----------------------------------------------
                0.00    0.00    4634/14383440     euclid(sc_dt::sc_bigint<250> const&, sc_dt::sc_bigint<250> const&, sc_dt::sc_bigint<250>&, sc_dt::sc_bigint<250>&, sc_dt::sc_bigint<250>&) [32]
                0.00    0.00 14378806/14383440     witness(sc_dt::sc_bigint<250> const&, sc_dt::sc_bigint<250> const&) [5]
[41]     0.0    0.00    0.00 14383440         sc_dt::operator!=(sc_dt::sc_signed const&, int) [41]
-----------------------------------------------
                0.00    0.00    2000/7708132     find_prime(sc_dt::sc_bigint<250> const&) [3]
                0.00    0.00 7706132/7708132     div_test(sc_dt::sc_bigint<250> const&) [16]
[42]     0.0    0.00    0.00 7708132         sc_dt::operator%(sc_dt::sc_signed const&, int) [42]
-----------------------------------------------
                0.00    0.00    2000/222780      rsa(int) [2]
                0.00    0.00  110390/222780      witness(sc_dt::sc_bigint<250> const&, sc_dt::sc_bigint<250> const&) [5]
                0.00    0.00  110390/222780      miller_rabin(sc_dt::sc_bigint<250> const&) [4]
[43]     0.0    0.00    0.00  222780         sc_dt::operator-(sc_dt::sc_signed const&, int) [43]
-----------------------------------------------
                0.00    0.00   72646/183036      find_prime(sc_dt::sc_bigint<250> const&) [3]
                0.00    0.00  110390/183036      miller_rabin(sc_dt::sc_bigint<250> const&) [4]
[44]     0.0    0.00    0.00  183036         sc_dt::operator+(sc_dt::sc_signed const&, int) [44]
-----------------------------------------------
                0.00    0.00  117390/117390      sc_dt::sc_bigint<250>::operator=(int) [25]
[45]     0.0    0.00    0.00  117390         sc_dt::sc_signed::operator=(int) [45]
-----------------------------------------------
                0.00    0.00    2000/114390      find_prime(sc_dt::sc_bigint<250> const&) [3]
                0.00    0.00    2000/114390      rsa(int) [2]
                0.00    0.00  110390/114390      miller_rabin(sc_dt::sc_bigint<250> const&) [4]
[46]     0.0    0.00    0.00  114390         sc_dt::sc_bigint<250>::sc_bigint(char const*) [46]
                0.00    0.00  114390/114390      sc_dt::sc_bigint<250>::operator=(char const*) [47]
-----------------------------------------------
                0.00    0.00  114390/114390      sc_dt::sc_bigint<250>::sc_bigint(char const*) [46]
[47]     0.0    0.00    0.00  114390         sc_dt::sc_bigint<250>::operator=(char const*) [47]
-----------------------------------------------
                0.00    0.00    3000/113390      inverse(sc_dt::sc_bigint<250> const&, sc_dt::sc_bigint<250> const&) [31]
                0.00    0.00  110390/113390      witness(sc_dt::sc_bigint<250> const&, sc_dt::sc_bigint<250> const&) [5]
[48]     0.0    0.00    0.00  113390         sc_dt::sc_bigint<250>::sc_bigint() [48]
-----------------------------------------------
                0.00    0.00    2000/112390      modular_exp(sc_dt::sc_bigint<250> const&, sc_dt::sc_bigint<250> const&, sc_dt::sc_bigint<250> const&) [27]
                0.00    0.00  110390/112390      witness(sc_dt::sc_bigint<250> const&, sc_dt::sc_bigint<250> const&) [5]
[49]     0.0    0.00    0.00  112390         sc_dt::sc_signed::length() const [49]
-----------------------------------------------
                0.00    0.00    8000/82646       rsa(int) [2]
                0.00    0.00   74646/82646       find_prime(sc_dt::sc_bigint<250> const&) [3]
[50]     0.0    0.00    0.00   82646         sc_dt::operator>(sc_dt::sc_signed const&, int) [50]
-----------------------------------------------
                0.00    0.00   74646/74646       miller_rabin(sc_dt::sc_bigint<250> const&) [4]
[51]     0.0    0.00    0.00   74646         sc_dt::operator<=(sc_dt::sc_signed const&, int) [51]
-----------------------------------------------
                0.00    0.00    7000/21000       sc_dt::sc_io_show_base(std::ostream&) [22]
                0.00    0.00   14000/21000       sc_dt::sc_io_base(std::ostream&, sc_dt::sc_numrep) [54]
[52]     0.0    0.00    0.00   21000         std::operator&(std::_Ios_Fmtflags, std::_Ios_Fmtflags) [52]
-----------------------------------------------
                0.00    0.00    7000/14000       sc_dt::sc_io_base(std::ostream&, sc_dt::sc_numrep) [54]
                0.00    0.00    7000/14000       sc_dt::sc_io_show_base(std::ostream&) [22]
[53]     0.0    0.00    0.00   14000         std::ios_base::flags() const [53]
-----------------------------------------------
                0.00    0.00    7000/7000        sc_dt::sc_signed::print(std::ostream&) const [23]
[54]     0.0    0.00    0.00    7000         sc_dt::sc_io_base(std::ostream&, sc_dt::sc_numrep) [54]
                0.00    0.00   14000/21000       std::operator&(std::_Ios_Fmtflags, std::_Ios_Fmtflags) [52]
                0.00    0.00    7000/14000       std::ios_base::flags() const [53]
-----------------------------------------------
                0.00    0.00    1000/1000        rsa(int) [2]
[55]     0.0    0.00    0.00    1000         max_bitstr(char*, int) [55]
-----------------------------------------------
                0.00    0.00    1000/1000        rsa(int) [2]
[56]     0.0    0.00    0.00    1000         randomize(int) [56]
-----------------------------------------------
                0.00    0.00     959/959         find_rel_prime(sc_dt::sc_bigint<250> const&) [33]
[57]     0.0    0.00    0.00     959         sc_dt::sc_signed::operator+=(int) [57]
-----------------------------------------------
                0.00    0.00       1/1           __libc_csu_init [71]
[58]     0.0    0.00    0.00       1         global constructors keyed to gcd(sc_dt::sc_bigint<250> const&, sc_dt::sc_bigint<250> const&) [58]
                0.00    0.00       1/1           __static_initialization_and_destruction_0(int, int) [59]
-----------------------------------------------
                0.00    0.00       1/1           global constructors keyed to gcd(sc_dt::sc_bigint<250> const&, sc_dt::sc_bigint<250> const&) [58]
[59]     0.0    0.00    0.00       1         __static_initialization_and_destruction_0(int, int) [59]
-----------------------------------------------

 This table describes the call tree of the program, and was sorted by
 the total amount of time spent in each function and its children.

 Each entry in this table consists of several lines.  The line with the
 index number at the left hand margin lists the current function.
 The lines above it list the functions that called this function,
 and the lines below it list the functions this one called.
 This line lists:
     index	A unique number given to each element of the table.
		Index numbers are sorted numerically.
		The index number is printed next to every function name so
		it is easier to look up where the function is in the table.

     % time	This is the percentage of the `total' time that was spent
		in this function and its children.  Note that due to
		different viewpoints, functions excluded by options, etc,
		these numbers will NOT add up to 100%.

     self	This is the total amount of time spent in this function.

     children	This is the total amount of time propagated into this
		function by its children.

     called	This is the number of times the function was called.
		If the function called itself recursively, the number
		only includes non-recursive calls, and is followed by
		a `+' and the number of recursive calls.

     name	The name of the current function.  The index number is
		printed after it.  If the function is a member of a
		cycle, the cycle number is printed between the
		function's name and the index number.


 For the function's parents, the fields have the following meanings:

     self	This is the amount of time that was propagated directly
		from the function into this parent.

     children	This is the amount of time that was propagated from
		the function's children into this parent.

     called	This is the number of times this parent called the
		function `/' the total number of times the function
		was called.  Recursive calls to the function are not
		included in the number after the `/'.

     name	This is the name of the parent.  The parent's index
		number is printed after it.  If the parent is a
		member of a cycle, the cycle number is printed between
		the name and the index number.

 If the parents of the function cannot be determined, the word
 `<spontaneous>' is printed in the `name' field, and all the other
 fields are blank.

 For the function's children, the fields have the following meanings:

     self	This is the amount of time that was propagated directly
		from the child into the function.

     children	This is the amount of time that was propagated from the
		child's children to the function.

     called	This is the number of times the function called
		this child `/' the total number of times the child
		was called.  Recursive calls by the child are not
		listed in the number after the `/'.

     name	This is the name of the child.  The child's index
		number is printed after it.  If the child is a
		member of a cycle, the cycle number is printed
		between the name and the index number.

 If there are any cycles (circles) in the call graph, there is an
 entry for the cycle-as-a-whole.  This entry shows who called the
 cycle (as parents) and the members of the cycle (as children.)
 The `+' recursive calls entry shows the number of function calls that
 were internal to the cycle, and the calls entry for each member shows,
 for that member, how many times it was called from other members of
 the cycle.

Copyright (C) 2012 Free Software Foundation, Inc.

Copying and distribution of this file, with or without modification,
are permitted in any medium without royalty provided the copyright
notice and this notice are preserved.

Index by function name

  [58] global constructors keyed to gcd(sc_dt::sc_bigint<250> const&, sc_dt::sc_bigint<250> const&) (rsa.cpp) [16] div_test(sc_dt::sc_bigint<250> const&) [45] sc_dt::sc_signed::operator=(int)
   [3] find_prime(sc_dt::sc_bigint<250> const&) [56] randomize(int) [11] sc_dt::sc_signed::operator[](int)
  [55] max_bitstr(char*, int) [54] sc_dt::sc_io_base(std::ostream&, sc_dt::sc_numrep) [57] sc_dt::sc_signed::operator+=(int)
  [27] modular_exp(sc_dt::sc_bigint<250> const&, sc_dt::sc_bigint<250> const&, sc_dt::sc_bigint<250> const&) [7] sc_dt::sc_value_base::~sc_value_base() [17] sc_dt::operator==(sc_dt::sc_signed const&, int)
  [12] rand_bitstr(char*, int) [22] sc_dt::sc_io_show_base(std::ostream&) [50] sc_dt::operator>(sc_dt::sc_signed const&, int)
   [4] miller_rabin(sc_dt::sc_bigint<250> const&) [13] sc_dt::sc_signed_bitref_r::initialize(sc_dt::sc_signed const*, int) [51] sc_dt::operator<=(sc_dt::sc_signed const&, int)
  [33] find_rel_prime(sc_dt::sc_bigint<250> const&) [46] sc_dt::sc_bigint<250>::sc_bigint(char const*) [20] sc_dt::operator<<(std::ostream&, sc_dt::sc_signed const&)
  [34] gcd(sc_dt::sc_bigint<250> const&, sc_dt::sc_bigint<250> const&) [15] sc_dt::sc_bigint<250>::sc_bigint(sc_dt::sc_signed const&) [21] sc_dt::operator<(sc_dt::sc_signed const&, int)
   [2] rsa(int)               [35] sc_dt::sc_bigint<250>::sc_bigint(sc_dt::sc_bigint<250> const&) [43] sc_dt::operator-(sc_dt::sc_signed const&, int)
  [59] __static_initialization_and_destruction_0(int, int) (rsa.cpp) [26] sc_dt::sc_bigint<250>::sc_bigint(int) [41] sc_dt::operator!=(sc_dt::sc_signed const&, int)
  [18] flip(double)           [48] sc_dt::sc_bigint<250>::sc_bigint() [44] sc_dt::operator+(sc_dt::sc_signed const&, int)
  [28] cipher(sc_dt::sc_bigint<250> const&, sc_dt::sc_bigint<250> const&, sc_dt::sc_bigint<250> const&) [9] sc_dt::sc_bigint<250>::~sc_bigint() [42] sc_dt::operator%(sc_dt::sc_signed const&, int)
  [32] euclid(sc_dt::sc_bigint<250> const&, sc_dt::sc_bigint<250> const&, sc_dt::sc_bigint<250>&, sc_dt::sc_bigint<250>&, sc_dt::sc_bigint<250>&) [47] sc_dt::sc_bigint<250>::operator=(char const*) [24] sc_dt::sc_signed::check_index(int) const
   [8] abs_val(sc_dt::sc_signed const&) [14] sc_dt::sc_bigint<250>::operator=(sc_dt::sc_signed const&) [23] sc_dt::sc_signed::print(std::ostream&) const
  [31] inverse(sc_dt::sc_bigint<250> const&, sc_dt::sc_bigint<250> const&) [19] sc_dt::sc_bigint<250>::operator=(sc_dt::sc_bigint<250> const&) [49] sc_dt::sc_signed::length() const
  [36] ret_pos(sc_dt::sc_bigint<250> const&, sc_dt::sc_bigint<250> const&) [25] sc_dt::sc_bigint<250>::operator=(int) [30] sc_dt::sc_signed::operator[](int) const
   [5] witness(sc_dt::sc_bigint<250> const&, sc_dt::sc_bigint<250> const&) [6] sc_dt::sc_signed::~sc_signed() [53] std::ios_base::flags() const
  [29] decipher(sc_dt::sc_bigint<250> const&, sc_dt::sc_bigint<250> const&, sc_dt::sc_bigint<250> const&) [10] sc_dt::sc_signed::~sc_signed() [52] std::operator&(std::_Ios_Fmtflags, std::_Ios_Fmtflags)
